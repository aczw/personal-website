---
import Pause from "lucide-astro/Pause";
import Play from "lucide-astro/Play";
---

<project-cover-controls class="motion-reduce:hidden">
  <button
    class="relative pill leading-none *:flex *:items-center *:justify-center *:gap-1 *:transition-opacity"
    title="Pause the videos playing on this page"
    data-quiet="true"
  >
    <span id="play" class="absolute inset-x-0" style={{ opacity: "0" }}>
      Play <Play size={16} class="inline-flex" />
    </span>
    <span id="pause">Pause <Pause size={16} class="inline-flex" /></span>
  </button>
</project-cover-controls>

<script>
  import { ProjectCover } from "@/scripts/project-cover";

  /**
   * Invariants:
   *
   * - Only one controls button exists per page/in the DOM, otherwise this function is called multiple times, which is bad as pause/play state is not synced between buttons.
   * - Every single video is either paused or playing, no strays
   */
  class ProjectCoverControls extends HTMLElement {
    #paused: boolean;
    #button: HTMLButtonElement;
    #projectCovers: ProjectCover[];
    #pause: HTMLSpanElement;
    #play: HTMLSpanElement;

    constructor() {
      super();

      this.#paused = false;
      this.#button = this.querySelector("button")!;
      this.#projectCovers = Array.from(
        document.querySelectorAll<ProjectCover>("project-cover"),
      )!;
      this.#pause = this.querySelector<HTMLSpanElement>("#pause")!;
      this.#play = this.querySelector<HTMLSpanElement>("#play")!;
    }

    connectedCallback() {
      this.#button.addEventListener("click", () => {
        if (this.#paused) {
          this.#pause.style.opacity = "100";
          this.#play.style.opacity = "0";
          this.#button.title = "Pause the videos playing on this page";
        } else {
          this.#pause.style.opacity = "0";
          this.#play.style.opacity = "100";
          this.#button.title = "Play videos on this page";
        }

        this.#projectCovers.forEach((pc) => {
          pc.externallyPaused = !this.#paused;

          if (this.#paused) {
            pc.playVideo();
          } else {
            pc.pauseVideo();
          }
        });

        this.#paused = !this.#paused;
      });
    }
  }

  customElements.define("project-cover-controls", ProjectCoverControls);
</script>
