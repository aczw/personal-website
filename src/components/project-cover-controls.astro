---
import { Pause, Play } from "lucide-astro";
---

<project-cover-controls class="motion-reduce:hidden">
  <button
    class="pill relative leading-none *:flex *:items-center *:justify-center *:gap-1 *:transition-opacity"
    title="Pause the videos playing on this page"
    data-quiet
  >
    <span id="play" class="absolute inset-x-0" style={{ opacity: "0" }}>
      Play <Play size={16} class="inline-flex" />
    </span>
    <span id="pause">Pause <Pause size={16} class="inline-flex" /></span>
  </button>
</project-cover-controls>

<script>
  // Invariant: only one controls button exists per page, otherwise this constructor would
  // be called multiple times which is bad as pause/play state is not synced between buttons.
  //
  // Invariant: videos autoplay on page load (so button should initially pause the videos)
  class ProjectCoverControls extends HTMLElement {
    connectedCallback() {
      let paused = false;

      const button = this.querySelector("button")!;
      const videos = document.querySelectorAll<HTMLVideoElement>("div.project-cover > video")!;

      const pause = this.querySelector<HTMLSpanElement>("#pause")!;
      const play = this.querySelector<HTMLSpanElement>("#play")!;

      // Every video is either paused or playing, so just checking the first one is fine
      button.addEventListener("click", () => {
        if (paused) {
          pause.style.opacity = "100";
          play.style.opacity = "0";
          button.title = "Pause the videos playing on this page";
        } else {
          pause.style.opacity = "0";
          play.style.opacity = "100";
          button.title = "Play videos on this page";
        }

        videos.forEach((video) => {
          if (paused) {
            video.play();
            video.parentElement!.style.opacity = "100";
          } else {
            video.pause();
            video.parentElement!.style.opacity = "0";
          }
        });

        paused = !paused;
      });
    }
  }

  customElements.define("project-cover-controls", ProjectCoverControls);
</script>
