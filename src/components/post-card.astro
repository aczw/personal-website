---
import { Image } from "astro:assets";
import type { HTMLAttributes } from "astro/types";

import type { Post } from "@/content/config";
import { ArrowRight } from "lucide-astro";

type Props = { post: Post } & HTMLAttributes<"div">;

const {
  post: {
    data: { title, blurb, tags, cover },
    slug,
  },
  ...props
} = Astro.props;

// see https://stackoverflow.com/questions/27451132/can-i-invert-the-height-direction-from-top-down-to-bottom-up for the height animation CSS.
---

<post-card {...props}>
  <a href={`/${slug}`}>
    <Image
      src={cover.img}
      alt={cover.alt}
      loading="eager"
      class="aspect-[16/10] rounded-t-xl bg-sweater-9 object-cover transition group-hover:scale-95 group-hover:opacity-50"
    />

    <div
      id="bottom-bar"
      class="absolute bottom-0 h-[calc(var(--blurb-h)+var(--bar-h))] space-y-1 overflow-hidden rounded-b-xl bg-sweater-9 p-4 transition-[background-color,height,border-radius] group-hover:rounded-t-xl group-hover:bg-sweater-8"
      style={{ "--blurb-h": "0px" }}
    >
      <span class="flex items-center justify-between gap-5">
        <div id="post-title">
          <h3 class="break-words text-sweater-2">{title}</h3>
          <p class="animate-fade text-sweater-5 [--order:0] xs:hidden">
            {tags.join(", ")}
          </p>
        </div>

        <div
          aria-hidden="true"
          class="rounded-full bg-sweater-8 p-1.5 transition group-hover:opacity-0"
        >
          <ArrowRight
            class="shrink-0 stroke-sweater-5 transition-colors group-hover:stroke-sweater-3"
          />
        </div>
      </span>

      <p
        id="blurb"
        class="opacity-0 transition-opacity group-hover:opacity-100"
      >
        {blurb}
      </p>
    </div>
  </a>
</post-card>

<script>
  class PostCard extends HTMLElement {
    constructor() {
      super();

      const bar = this.querySelector<HTMLElement>("#bottom-bar")!;
      const blurb = bar.querySelector<HTMLElement>("#blurb")!;

      // initially call it once on HTML load, then add event listener to window
      this._setBarHeight();
      window.addEventListener("resize", () => this._setBarHeight());

      // blurb height has to be recalculated every mouseenter because we may have resized the window
      this.addEventListener("mouseenter", () =>
        bar.style.setProperty("--blurb-h", `${blurb.getBoundingClientRect().height}px`),
      );
      this.addEventListener("mouseleave", () => bar.style.setProperty("--blurb-h", "0px"));
    }

    _setBarHeight() {
      const titleHeight =
        this.querySelector<HTMLElement>("#post-title")!.getBoundingClientRect().height;

      // if the max height title is less than the arrow icon, use
      // the arrow container's size instead, which is 35.25px
      const contentHeight = Math.max(titleHeight, 35.25);

      // we apply p-4 padding, which is 1rem on all sides
      this.style.setProperty("--bar-h", `calc(${contentHeight}px + 2rem)`);
    }
  }

  customElements.define("post-card", PostCard);
</script>
