---
import type { ImageMetadata } from "astro";
import Img from "./img.astro";

interface Props {
  location: "projects";
  innerPath?: string;
  imgs: { src: string; alt: string }[];
}

const { location, innerPath, imgs } = Astro.props;

let images: Record<
  string,
  () => Promise<{
    default: ImageMetadata;
  }>
>;
let prefix: string;

/**
 * @see https://docs.astro.build/en/recipes/dynamically-importing-images/
 * @see https://github.com/vitejs/vite/issues/5478#issuecomment-955117892
 */
switch (location) {
  case "projects":
    images = import.meta.glob<{ default: ImageMetadata }>(
      "/src/content/projects/**/*.{jpeg,jpg,png,gif}",
    );
    prefix = "/src/content/projects";
    break;

  default:
    throw new Error(`cannot import images from unknown location "${location}"`);
}
---

<div class="space-y-3.5 rounded-b-[1.1rem] rounded-t-xl bg-sweater-9 p-2 sm:p-3.5">
  <p class="text-center font-mono text-sm text-sweater-2">
    This is an image gallery. Scroll left or right to see more pictures!
  </p>
  <div class="flex snap-x snap-mandatory gap-3.5 overflow-x-scroll">
    {
      imgs.map(async ({ src, alt }) => {
        const concatPath = `${prefix}${innerPath ? `/${innerPath}` : "/"}${src}`;
        const importImg = images[concatPath];

        if (!importImg) {
          throw new Error(
            `"${concatPath}" does not exist for glob "${prefix}/**/*.{jpeg,jpg,png,gif}!"`,
          );
        }

        return (
          <Img
            src={importImg()}
            alt={alt}
            className="snap-center"
          />
        );
      })
    }
  </div>
</div>
