---
import type { HTMLAttributes } from "astro/types";
import type { CollectionEntry } from "astro:content";
import { ArrowRight } from "lucide-astro";

import ProjectCover from "@/components/project-cover.astro";

type Props = {
  project: CollectionEntry<"projects">;
  useVideoFn: (project: CollectionEntry<"projects">) => { small: boolean } | null;
  home: boolean;
} & Omit<HTMLAttributes<"a">, "href">;

const { project, useVideoFn, home, class: className, ...props } = Astro.props;
const {
  data: { name, blurb, metadata, cover },
  id,
} = project;
---

<a href={`/projects/${id}`} class:list={["group relative h-fit", className]} {...props}>
  <ProjectCover
    id={id}
    cover={cover}
    useVideo={useVideoFn(project)}
    class:list={[
      "overflow-hidden transition group-hover:scale-[0.93] group-hover:opacity-50",
      home ? "rounded-xl" : "rounded-t-xl",
    ]}
  />

  {
    import.meta.env.DEV ? (
      <span class="pill absolute left-2.5 top-2.5 font-bold leading-none">
        {project.data.order}
      </span>
    ) : null
  }

  <div
    class:list={[
      "absolute inset-x-0 bottom-0 space-y-4 rounded-b-xl bg-sweater-9 px-4 transition-[background-color_border-radius] group-hover:rounded-t-xl group-hover:bg-sweater-8",
      { "pt-4": !home },
    ]}
  >
    {
      home ? null : (
        <div class="flex items-center justify-between gap-4">
          <div>
            <h2>{name}</h2>
            <li class="flex flex-wrap gap-x-2">
              {metadata.tech.map((tech, idx) => (
                <ul class="berkeley text-sweater-5">
                  <span>{tech}</span>
                  {idx !== metadata.tech.length - 1 ? (
                    <span aria-hidden="true" class="text-sweater-7">
                      /
                    </span>
                  ) : null}
                </ul>
              ))}
            </li>
          </div>

          <div
            aria-hidden="true"
            class="rounded-full bg-sweater-8 p-1 transition-colors group-hover:bg-sweater-7"
          >
            <ArrowRight class="shrink-0 stroke-sweater-6 transition-colors group-hover:stroke-sweater-4" />
          </div>
        </div>
      )
    }

    <div class="grid grid-rows-[0fr] transition-[grid-template-rows] group-hover:grid-rows-[1fr]">
      <div class="overflow-hidden text-pretty opacity-0 transition-opacity group-hover:opacity-100">
        {
          home ? (
            <>
              <div aria-hidden="true" class="h-4" />
              <div class="flex items-center justify-between gap-4">
                <div>
                  <h2>{name}</h2>
                  <li class="flex flex-wrap gap-x-2">
                    {metadata.tech.map((tech, idx) => (
                      <ul class="berkeley text-sweater-5">
                        <span>{tech}</span>
                        {idx !== metadata.tech.length - 1 ? (
                          <span aria-hidden="true" class="text-sweater-7">
                            /
                          </span>
                        ) : null}
                      </ul>
                    ))}
                  </li>
                </div>

                <div
                  aria-hidden="true"
                  class="rounded-full bg-sweater-8 p-1 transition-colors group-hover:bg-sweater-7"
                >
                  <ArrowRight class="shrink-0 stroke-sweater-6 transition-colors group-hover:stroke-sweater-4" />
                </div>
              </div>
            </>
          ) : (
            <p>{blurb}</p>
          )
        }

        <div aria-hidden="true" class="h-4"></div>
      </div>
    </div>
  </div>

  {
    home ? null : (
      <div aria-hidden="true" class="p-4 text-transparent">
        <div class="flex items-center justify-between gap-4">
          <div>
            <h2>{name}</h2>
            <li class="flex flex-wrap gap-x-2">
              {metadata.tech.map((tech, idx) => (
                <ul class="berkeley">
                  <span>{tech}</span>
                  {idx !== metadata.tech.length - 1 ? <span>/</span> : null}
                </ul>
              ))}
            </li>
          </div>

          <div class="rounded-full p-1">
            <div class="size-[24px]" />
          </div>
        </div>
      </div>
    )
  }
</a>
