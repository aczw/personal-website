<mewo-quote
  ><blockquote
    class="-translate-x-1 animate-fade font-mono text-[14.5px] font-[120] italic text-sweater-3 [--order:3]"
  >
    <p
      id="quote"
      class="h-[1rem] w-fit cursor-[url('../assets/mewo.webp')_32_32,_not-allowed] leading-none"
    >
    </p>
  </blockquote></mewo-quote
>

<script>
  customElements.define(
    "mewo-quote",
    class extends HTMLElement {
      #text = '"Waiting for something to happen?"';
      #speed = 40;
      #size = 7;
      #symbols = "abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()[]\\+-={}/";
      #elt: HTMLParagraphElement;

      constructor() {
        super();
        this.#elt = this.querySelector<HTMLParagraphElement>("#quote")!;
      }

      #clampIndex(index: number) {
        if (index <= 0) {
          return 0;
        } else if (index >= this.#text.length - 1) {
          return this.#text.length - 1;
        } else {
          return index;
        }
      }

      connectedCallback() {
        let numIterations = this.#text.length + this.#size;
        let iterationIndex = 0;

        let timer = window.setInterval(() => {
          if (iterationIndex < numIterations) {
            let startIndex = iterationIndex - (this.#size - 1);
            let endIndex = iterationIndex;

            let garbledSize = this.#clampIndex(endIndex) - this.#clampIndex(startIndex);
            if (startIndex <= this.#clampIndex(endIndex)) {
              garbledSize++;
            }

            let garbled = "";
            for (let i = 0; i < garbledSize; i++) {
              garbled += this.#symbols.charAt(Math.floor(Math.random() * this.#symbols.length));
            }

            let rest = this.#text.slice(0, startIndex >= 0 ? startIndex : 0);
            this.#elt.innerText = rest + garbled;
          } else {
            clearInterval(timer);
          }

          iterationIndex++;
        }, this.#speed);
      }
    },
  );
</script>
