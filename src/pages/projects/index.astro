---
import { getCollection, type CollectionEntry } from "astro:content";
import { CircleX } from "lucide-astro";

import MainLayout from "@/layouts/main-layout.astro";
import { Filters } from "@/scripts/types";
import ProjectCoverControls from "@/components/project-cover-controls.astro";
import ProjectCard from "@/components/project-card.astro";

let projects = await getCollection("projects");
projects.sort((a, b) => a.data.order - b.data.order);

const searchParams = Astro.url.searchParams;
const filterParams = Filters.map((filter) => searchParams.has("filter", filter));

const isFilteredByAny = filterParams.reduce((acc, x) => acc || x);

if (isFilteredByAny) {
  const index = filterParams.indexOf(true);
  projects = projects.filter((p) => p.data.type === Filters[index]);
}

const useVideo: CollectionEntry<"projects">["id"][] = ["path-tracer", "rcw", "fireball"];
---

<MainLayout
  meta={{
    kind: "route",
    title: "Projects",
    description: "Projects I've made, mostly related to graphics, games, and web development.",
    ogImageParams: "Projects I've done.",
  }}
  useMinHeight
  useVerticalSpacing
>
  <section class="space-y-4">
    <h1 class="animate-fade text-xl [--order:0]">
      All projects {isFilteredByAny ? <span class="text-sweater-6">(filtered)</span> : null}
    </h1>

    <div
      class="flex animate-fade items-center justify-between border-y-thin border-sweater-9 [--order:1]"
    >
      <div
        class="flex flex-grow flex-wrap items-center gap-2.5 border-r-thin border-sweater-9 py-4 pr-4"
      >
        <p class="berkeley text-sweater-4">
          Filter{isFilteredByAny ? "ed" : ""} by:
        </p>

        <div class="flex items-center gap-2.5 [--fade-speed:50ms]">
          {
            Filters.map((filter, idx) => {
              const isCurrFiltered = filterParams[idx];

              return (
                <a
                  title={isCurrFiltered ? `Remove "${filter}" filter` : `Filter by "${filter}"`}
                  class="pill flex animate-fade items-center gap-1.5 leading-none"
                  href={`/projects${isCurrFiltered ? "" : `?filter=${filter}`}`}
                  data-quiet={!isCurrFiltered}
                  style={{ "--order": idx + 1 }}
                >
                  {filter} {isCurrFiltered ? <CircleX size={16} /> : null}
                </a>
              );
            })
          }
        </div>
      </div>

      <div class="flex-shrink-0 py-4 pl-4">
        <ProjectCoverControls />
      </div>
    </div>
  </section>

  <section class="grid grid-cols-1 gap-6 [--fade-speed:40ms] sm:grid-cols-2">
    {
      projects.map((p, idx) => (
        <ProjectCard
          project={p}
          useVideoFn={(p) => (useVideo.includes(p.id) ? { small: true } : null)}
          home={false}
          class="animate-fade transition-opacity"
          style={{ "--order": idx + 1 }}
        />
      ))
    }
  </section>
</MainLayout>
