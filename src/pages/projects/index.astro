---
import { getCollection } from "astro:content";

import {
  ImageIcon,
  JoystickIcon,
  ShapesIcon,
  type Icon as IconType,
} from "@lucide/astro";

import ProjectCover from "@/components/project-cover.astro";
import { PROJECT_CATEGORIES } from "@/scripts/constants";
import MainLayout from "@/layouts/main-layout.astro";

let projects = await getCollection("projects");
projects.sort((a, b) => a.data.order - b.data.order);

const icons: (typeof IconType)[] = [ImageIcon, JoystickIcon, ShapesIcon];

const enabledVideos = ["path-tracer", "pbr-renderer", "fireball", "door"];
---

<MainLayout
  meta={{
    kind: "route",
    title: "Projects",
    description: "Projects mostly related to graphics and games.",
    ogImageParams: "Graphics projects and games.",
  }}
>
  {
    PROJECT_CATEGORIES.map((category, index) => {
      const Icon = icons[index]!;

      return (
        <section class="grid-line-before grid-line-after relative">
          <a href={`#${category}`} class="group">
            <h2
              id={category}
              class="flex items-center justify-between border-b-(length:--border-w) border-dashed border-line-dark p-[calc(var(--spacing-pad)+2px)] font-bold text-link-secondary transition-colors group-hover:bg-line-dark group-hover:text-link-secondary-hover"
            >
              {category.charAt(0).toUpperCase() + category.slice(1)}
              <Icon size={18} class="stroke-icon" />
            </h2>
          </a>

          <div class="grid grid-cols-1 560:grid-cols-2">
            {projects
              .filter((project) => project.data.type === category)
              .map(
                ({ id, data: { name, subtitle, metadata, cover } }, index) => (
                  <div
                    class:list={[
                      "border-dashed border-line-dark p-[calc(var(--spacing-pad)+2px)] transition-colors hover:bg-sweater-9/40",
                      index % 2 === 0 ?
                        "560:border-r-(length:--border-w)"
                      : null,
                      index < projects.length - 2 ?
                        "border-b-(length:--border-w)"
                      : null,
                    ]}
                  >
                    <a href={`/projects/${id}`} class="group block">
                      <ProjectCover
                        id={id}
                        cover={cover}
                        useVideo={
                          enabledVideos.includes(id) ? { small: true } : null
                        }
                        class="overflow-hidden rounded-t-lg"
                      />

                      <div class="rounded-b-lg bg-sweater-9 p-pad transition-colors group-hover:bg-sweater-8">
                        <h3 class="font-bold text-link-primary transition-colors group-hover:text-link-primary-hover">
                          {name}
                        </h3>

                        <ul class="flex flex-wrap gap-x-2 text-link-secondary">
                          {metadata.tech.map((tech, index) => (
                            <li>
                              {tech}
                              {index !== metadata.tech.length - 1 ?
                                <span
                                  aria-hidden="true"
                                  class="text-sweater-6/70"
                                >
                                  /
                                </span>
                              : null}
                            </li>
                          ))}
                        </ul>
                      </div>
                    </a>
                  </div>
                ),
              )}
          </div>
        </section>
      );
    })
  }
</MainLayout>
