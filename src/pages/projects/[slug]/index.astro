---
import Img from "@/components/img.astro";
import Link from "@/components/link.astro";
import MainLayout from "@/layouts/main-layout.astro";
import PrimitiveLayout from "@/layouts/primitive-layout.astro";
import { getCollection } from "astro:content";
import { Calendar, ExternalLink, Wrench } from "lucide-astro";

export async function getStaticPaths() {
  const projectEntries = await getCollection("projects");
  return projectEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
const { data } = entry;
---

<PrimitiveLayout
  title={data.title}
  description={data.blurb}
>
  <MainLayout className="space-y-8">
    <Img
      src={data.cover.img}
      alt={data.cover.alt}
      className="animate-fade border-2 border-sweater-9 [--delay:75ms]"
    />

    <section class="animate-fade [--delay:150ms]">
      <h1 class="text-xl text-sweater-2">{data.title}</h1>
      <p>{data.blurb}</p>
    </section>

    <section class="grid animate-fade grid-cols-1 gap-4 [--delay:225ms] xs:grid-cols-2">
      <div>
        {
          data.link ? (
            <>
              <p class="flex items-center font-mono text-sm uppercase text-sweater-5">
                <ExternalLink
                  size={16}
                  class="mr-1.5"
                />
                {data.link.text}
              </p>
              <Link
                href={data.link.url}
                newTab
                icon={false}
              >
                {data.link.url}
              </Link>
            </>
          ) : (
            <>
              <p class="flex items-center font-mono text-sm uppercase text-sweater-5">
                <Calendar
                  size={16}
                  class="mr-1.5"
                />
                Date
              </p>
              <time
                class="text-sweater-3"
                datetime={data.date.toISOString()}
              >
                {data.date.toLocaleDateString("en-US", { month: "short", year: "numeric" })}
              </time>
            </>
          )
        }
      </div>
      <div>
        <p class="flex items-center font-mono text-sm uppercase text-sweater-5">
          <Wrench
            size={16}
            class="mr-1.5"
          />
           Built with
        </p>
        <p class="text-sweater-3">{data.tags.join(", ")}</p>
      </div>
    </section>

    {
      data.draft ? (
        <div class="animate-fade rounded-lg border-2 border-sweater-6 bg-sweater-8 p-4 [--delay:300ms]">
          <h2 class="text-sweater-3">Under construction! ⚙️</h2>
          <p>
            Pardon <span class="line-through">our</span> my dust, I have not finished the write-up
            for this project yet. I will get to it eventually, promise. If I've provided a link
            above, go check that out instead!
          </p>
        </div>
      ) : (
        <article class="animate-fade space-y-[1rem] [--delay:225ms]">
          <Content />
        </article>
      )
    }
  </MainLayout>
</PrimitiveLayout>
