---
import type { GetStaticPaths } from "astro";
import { Image } from "astro:assets";
import { getEntry, render } from "astro:content";

import MainLayout from "@/layouts/main-layout.astro";
import PostPublishedStatus from "@/components/dev/post-published-status.astro";
import TableOfContents from "@/components/table-of-contents.astro";

import Anchor from "@/components/mdx/anchor.astro";
import Aside from "@/components/mdx/aside.astro";
import H2 from "@/components/mdx/h2.astro";
import H3 from "@/components/mdx/h3.astro";
import { validProjectCover } from "@/scripts/util";
import { getCollection } from "astro:content";

export const getStaticPaths = (async () => {
  const posts = await getCollection("posts", (post) => post.data.published);
  return posts.map((post) => {
    return { params: { id: post.id } };
  });
}) satisfies GetStaticPaths;

const { id } = Astro.params;
const post = await getEntry("posts", id)!;
const {
  data: { title, blurb, posted, updated, cover, published },
} = post;

if (cover && !validProjectCover(cover.img.width, cover.img.height)) {
  throw new Error("Cover images must have an aspect ratio of 16:10!");
}

// Only show post status in development
let status = published ? "[PUBLISHED] " : "[DRAFT] ";
status = import.meta.env.DEV ? status : "";

const dateOptions: Intl.DateTimeFormatOptions = {
  month: "long",
  day: "numeric",
  year: "numeric",
  timeZone: "America/New_York",
};

const { Content, headings } = await render(post);
---

<MainLayout meta={{ kind: "post", post, status }}>
  <div class="grid grid-cols-2 gap-8 pt-2">
    <div class="berkeley subtitle flex flex-col">
      <time datetime={posted.toISOString()}>
        {posted.toLocaleDateString("en-US", dateOptions)}
      </time>

      {
        updated ? (
          <time datetime={updated.toISOString()}>
            Updated {updated.toLocaleDateString("en-US", dateOptions)}
          </time>
        ) : null
      }
    </div>

    <p class="subtitle col-start-2 col-end-3">{blurb}</p>
  </div>

  <article class="w-full space-y-12 py-12 post:w-[calc(100%-0px)]">
    <section class="space-y-4">
      {cover ? <Image src={cover.img} alt={cover.alt} loading="eager" class="" /> : null}
    </section>

    <section class="space-y-6">
      <Content
        components={{
          h2: H2,
          h3: H3,
          blockquote: Aside,
          a: Anchor,
          img: Image,
        }}
      />
    </section>
  </article>

  <!-- <TableOfContents headings={headings} /> -->
</MainLayout>
