---
import { Image } from "astro:assets";
import { getCollection, getEntry } from "astro:content";
import type { GetStaticPaths } from "astro";

import { CalendarFoldIcon } from "@lucide/astro";

import { getShortDateFormatting, validProjectCover } from "@/scripts/util";
import ContentLayout from "@/layouts/content-layout.astro";
import ContentWithToc from "@/components/content-with-toc.astro";

export const getStaticPaths = (async () => {
  const posts = await getCollection("posts");
  return posts.map((post) => {
    return { params: { id: post.id } };
  });
}) satisfies GetStaticPaths;

const { id } = Astro.params;
const post = await getEntry("posts", id);

if (!post) {
  throw new Error(`No post with id "${id}" found in collection."`);
}

const {
  data: { title, blurb, posted, cover },
} = post;

if (cover && !validProjectCover(cover.img.width, cover.img.height)) {
  throw new Error("Cover images must have an aspect ratio of 16:10!");
}
---

<ContentLayout meta={{ kind: "post", post }}>
  {
    cover ?
      <section class="grid-line-before grid-line-after relative p-pad">
        <Image
          src={cover.img}
          alt={cover.alt}
          loading="eager"
          class="rounded-lg bg-sweater-9"
        />
      </section>
    : null
  }

  <section
    id="content-begin"
    class="grid-line-before grid-line-after relative p-pad"
  >
    <div class="span-normal mb-6 space-y-1">
      <h1 class="text-3xl">{title}</h1>
      {blurb ? <p class="text-subtitle">{blurb}</p> : null}
    </div>

    <time
      datetime={posted.toISOString()}
      class="span-normal flex items-center gap-1.5 maple text-sweater-4"
    >
      <CalendarFoldIcon size={16} />
      {getShortDateFormatting(posted)}
    </time>
  </section>

  <ContentWithToc entry={post} />
</ContentLayout>
