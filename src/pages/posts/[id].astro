---
import type { GetStaticPaths } from "astro";
import { Image } from "astro:assets";
import { getEntry, getCollection, render } from "astro:content";

import { validProjectCover } from "@/scripts/util";
import TableOfContents from "@/components/table-of-contents.astro";

import Anchor from "@/components/mdx/anchor.astro";
import Aside from "@/components/mdx/aside.astro";
import H2 from "@/components/mdx/h2.astro";
import H3 from "@/components/mdx/h3.astro";
import CommonLayout from "@/layouts/common-layout.astro";
import { CalendarFold, ClockArrowUp } from "lucide-astro";

export const getStaticPaths = (async () => {
  const posts = await getCollection("posts", (post) => post.data.published);
  return posts.map((post) => {
    return { params: { id: post.id } };
  });
}) satisfies GetStaticPaths;

const { id } = Astro.params;
const post = await getEntry("posts", id)!;
const {
  data: { title, blurb, posted, updated, cover, published },
} = post;

if (cover && !validProjectCover(cover.img.width, cover.img.height)) {
  throw new Error("Cover images must have an aspect ratio of 16:10!");
}

// Only show post status in development
let status = published ? "[PUBLISHED] " : "[DRAFT] ";
status = import.meta.env.DEV ? status : "";

const dateOptions: Intl.DateTimeFormatOptions = {
  month: "long",
  day: "numeric",
  year: "numeric",
  timeZone: "America/New_York",
};

const { Content, headings } = await render(post);
---

<CommonLayout meta={{ kind: "post", post, status }}>
  <main class="py-12">
    <article class="space-y-6">
      {
        cover ? (
          <div class="span-wide [&_+_div]:pt-6">
            <Image src={cover.img} alt={cover.alt} loading="eager" class="rounded-xl" />
          </div>
        ) : null
      }

      <div class="span-normal space-y-1">
        <h1 class="text-3xl">{title}</h1>
        {blurb ? <p class="subtitle">{blurb}</p> : null}
      </div>

      <div class="span-normal berkeley text-sweater-4">
        <time datetime={posted.toISOString()} class="flex items-center gap-1.5">
          <CalendarFold size={16} />
          {posted.toLocaleDateString("en-US", dateOptions)}
        </time>
        {
          updated ? (
            <time datetime={updated.toISOString()} class="flex items-center gap-1.5">
              <ClockArrowUp size={16} />
              Updated {updated.toLocaleDateString("en-US", dateOptions)}
            </time>
          ) : null
        }
      </div>

      <section class="mdx-span-normal space-y-6">
        <Content
          components={{
            h2: H2,
            h3: H3,
            blockquote: Aside,
            a: Anchor,
            img: Image,
          }}
        />
      </section>

      <!-- <TableOfContents headings={headings} /> -->
    </article>
  </main>
</CommonLayout>
