---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

import PostPublishedStatus from "@/components/dev/post-published-status.astro";
import CommonLayout from "@/layouts/common-layout.astro";

const posts = await getCollection("posts", (post) => import.meta.env.DEV || post.data.published);
const yearPostsMap = new Map<number, CollectionEntry<"posts">[]>();

posts.forEach((post) => {
  const year = post.data.posted.getFullYear();

  if (!yearPostsMap.has(year)) {
    yearPostsMap.set(year, [post]);
  } else {
    yearPostsMap.get(year)!.push(post);
  }
});

// Sort by year
const entries = yearPostsMap.entries().toArray();
entries.sort((a, b) => b[0] - a[0]);
---

<CommonLayout
  meta={{
    kind: "route",
    title: "Posts",
    description:
      "Random writing about stuff I've learned, things I'm working on, and interesting topics.",
    ogImageParams: "All my posts.",
  }}
>
  <main class="span-normal span-height py-12">
    <div
      class="pointer-events-none space-y-12 [--fade-speed:25ms] [&_.row:not(:hover)]:hover:brightness-50"
    >
      {
        entries.map(([year, yearPosts]) => {
          const sortedPosts = yearPosts;
          sortedPosts.sort((a, b) => b.data.posted.getTime() - a.data.posted.getTime());

          return (
            <section>
              <h2 class="berkeley row mb-4 animate-fade cursor-default leading-none text-sweater-6 transition-[filter_opacity] [--order:0]">
                {year}
              </h2>

              <div class="pointer-events-auto flex flex-col">
                {sortedPosts.map(({ data: { title, blurb, posted, published }, id }, idx) => (
                  <a
                    href={`/posts/${id}`}
                    class="row group flex animate-fade flex-col gap-1 border-y-2 border-b-sweater-9/0 border-t-sweater-9 py-4 transition-[filter_opacity] last:border-b-sweater-9 hover:border-b-sweater-9/100 380:flex-row 380:gap-8"
                    style={{ "--order": idx + 1 }}
                  >
                    <time
                      datetime={posted.toISOString()}
                      title={posted.toLocaleString("en-US", {
                        month: "long",
                        day: "numeric",
                        year: "numeric",
                        hour: "numeric",
                        minute: "numeric",
                        timeZone: "America/New_York",
                        timeZoneName: "short",
                      })}
                      class="berkeley shrink-0 text-sweater-4 transition-colors group-hover:text-sweater-3"
                    >
                      <span class="380:hidden">
                        {posted.toLocaleDateString("en-US", {
                          month: "long",
                          day: "numeric",
                          timeZone: "America/New_York",
                        })}
                      </span>
                      <span class="hidden 380:inline">
                        {posted.toLocaleDateString("en-US", {
                          month: "2-digit",
                          day: "2-digit",
                          timeZone: "America/New_York",
                        })}
                      </span>
                    </time>

                    <div class="space-y-1">
                      <h2>
                        {title}
                        <PostPublishedStatus published={published} />
                      </h2>
                      {blurb ? (
                        <p class="subtitle transition-[color_opacity] group-hover:text-sweater-1 group-hover:opacity-100">
                          {blurb}
                        </p>
                      ) : null}
                    </div>
                  </a>
                ))}
              </div>
            </section>
          );
        })
      }
    </div>
  </main>
</CommonLayout>
