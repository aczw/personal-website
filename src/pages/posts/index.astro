---
import { getCollection } from "astro:content";

import ContentLayout from "@/layouts/content-layout.astro";

let posts = await getCollection("posts");
posts = posts.filter((post) => import.meta.env.DEV || post.data.published);
posts.sort((a, b) => b.data.posted.getTime() - a.data.posted.getTime());
---

<ContentLayout
  minHeight
  meta={{
    kind: "route",
    title: "Posts",
    description: "Writings on some stuff that I've done.",
    ogImageParams: "All my posts.",
  }}
>
  <h1 class="animate-fade text-xl [--order:0]">All posts</h1>

  <section class="flex flex-col [&>a:not(:hover)]:hover:brightness-50">
    {
      posts.map((post, idx) => {
        let {
          data: { title, blurb, posted, published },
          slug,
        } = post;

        return (
          <a
            href={`/posts/${slug}`}
            class="group flex animate-fade flex-col gap-4 border-y-[1.5px] border-b-sweater-9/0 border-t-sweater-9 py-4 transition-[filter_opacity] xs:flex-row xs:gap-8 hover:[&:not(:last-child)]:border-b-sweater-9/100"
            style={{ "--order": idx + 1 }}
          >
            <timep
              datetime={posted.toISOString()}
              title={posted.toLocaleString("en-US", {
                month: "long",
                day: "numeric",
                year: "numeric",
                hour: "numeric",
                minute: "numeric",
                timeZoneName: "short",
              })}
              class="berkeley shrink-0 text-sweater-5 transition-colors group-hover:text-sweater-4"
            >
              <span class="xs:hidden">
                {posted.toLocaleString("en-US", {
                  month: "long",
                  day: "numeric",
                  year: "numeric",
                })}
              </span>
              <span class="hidden xs:inline">
                {posted.toLocaleString("en-US", {
                  month: "2-digit",
                  day: "2-digit",
                  year: "2-digit",
                })}
              </span>
            </timep>

            <div class="space-y-1.5">
              <h2 class="break-words">
                {import.meta.env.DEV ? (published ? "[PUBLISHED]" : "[DRAFT]") : ""} {title}
              </h2>
              <p class="subtitle transition-[color_opacity] group-hover:text-sweater-1 group-hover:opacity-100">
                {blurb}
              </p>
            </div>
          </a>
        );
      })
    }
  </section>
</ContentLayout>
