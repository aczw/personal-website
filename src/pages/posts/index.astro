---
import { getCollection } from "astro:content";

import { CircleArrowRightIcon } from "@lucide/astro";

import {
  getFullDateFormatting,
  getMonthYearDateFormatting,
} from "@/scripts/util";
import MainLayout from "@/layouts/main-layout.astro";

const posts = await getCollection("posts");
const sortedPosts = posts.sort(
  (a, b) => b.data.posted.getTime() - a.data.posted.getTime(),
);
---

<MainLayout
  meta={{
    kind: "route",
    title: "Posts",
    description:
      "Random writing about stuff I've learned, things I'm working on, and interesting topics.",
    ogImageParams: "Random ramblings on stuff I've been doing.",
  }}
>
  <section class="grid-line-before grid-line-after relative flex flex-col">
    {
      sortedPosts.map(({ data: { title, blurb, posted }, id, body }, index) => {
        let isSubsequentPostInYear = false;
        const monthYearDate = getMonthYearDateFormatting(posted);

        const prevPost = sortedPosts[index - 1];
        if (prevPost) {
          isSubsequentPostInYear =
            prevPost.data.posted.getFullYear() === posted.getFullYear();
        }

        return (
          <a
            href={`/posts/${id}`}
            class="group flex border-dashed border-line-dark transition-colors not-last:border-b-(length:--border-w) hover:bg-line-dark sm:grid sm:grid-cols-[202px_minmax(0px,1fr)]"
          >
            <time
              datetime={posted.toISOString()}
              title={getFullDateFormatting(posted)}
              class="hidden border-r-(length:--border-w) border-dashed border-line-dark text-link-secondary 480:flex"
            >
              <span class="border-dashed border-line-dark p-pad sm:border-r-(length:--border-w)">
                <span
                  class:list={[isSubsequentPostInYear ? "invisible" : null]}
                >
                  {posted.getFullYear()}
                </span>
              </span>

              <span class="hidden p-pad text-link-secondary transition-colors group-hover:text-link-secondary-hover sm:inline">
                {monthYearDate}
              </span>
            </time>

            <span class="flex w-full justify-between gap-pad-2 p-pad">
              <span>
                <time
                  datetime={posted.toISOString()}
                  class="text-link-secondary transition-colors group-hover:text-link-secondary-hover sm:hidden"
                >
                  {
                    // This forces everything to be converted to a string first, avoiding weird spaces between commas
                    <>
                      {monthYearDate}
                      {!isSubsequentPostInYear ?
                        <span class="480:hidden">, {posted.getFullYear()}</span>
                      : null}
                    </>
                  }
                </time>

                <h2 class="font-bold text-link-primary transition-colors group-hover:text-link-primary-hover">
                  {title}
                </h2>

                {blurb || body ?
                  <p
                    class:list={[
                      "hidden leading-snug text-subtitle transition-colors group-hover:text-sweater-1 480:block sm:text-inherit sm:group-hover:text-inherit",
                      !blurb && body ? "italic" : null,
                    ]}
                  >
                    {blurb ?
                      blurb
                    : body ?
                      <>“{body.slice(0, 70)}...”</>
                    : null}
                  </p>
                : null}
              </span>

              <CircleArrowRightIcon
                aria-hidden="true"
                size={18}
                class="shrink-0 stroke-icon group-hover:stroke-icon 480:hidden 480:stroke-transparent md:block"
              />
            </span>
          </a>
        );
      })
    }
  </section>
</MainLayout>
