---
export const prerender = false;

import { Image } from "astro:assets";
import Link from "@/components/link.astro";
import CommonLayout from "@/layouts/common-layout.astro";

// Set response code, just in case it wasn't obvious
Astro.response.status = 404;
Astro.response.statusText = "Page Not Found";

const fun = [
  "WFSTH",
  "pagenotfound",
  "soitgoes",
  "aczw",
  "newfaces",
  "doitagain",
  "tilinfinity",
  "suboptimal",
  "promiseme",
  "allitcosts",
];

const pick = fun[Math.floor(Math.random() * fun.length)]!;
const offset = Math.floor(Math.random() * pick.length);
const scrambled = pick.slice(offset) + pick.slice(0, offset);

const requestUrl = new URL(Astro.request.url);
const params = requestUrl.searchParams;
const hasUwu = params.has("uwu") && params.get("uwu") === "true";
---

<CommonLayout
  meta={{
    kind: "route",
    title: "404",
    description: "Sorry, this page doesn't exist.",
    ogImageParams: "Page not found.",
  }}
>
  <main
    class="flex span-height flex-col items-center justify-center space-y-12 py-12"
  >
    {
      hasUwu ?
        <Image
          src={import("@/assets/not-found.png")}
          alt="Page not found"
          class="mb-16 w-[clamp(400px,80%,500px)] animate-fade-in [--order:0]"
        />
      : <p
          id="scroll"
          aria-hidden="true"
          data-scrambled={scrambled}
          class="w-fit animate-fade-in cursor-not-allowed rounded-full bg-sweater-9 px-6 py-2 font-mono text-[clamp(30px,7vw,90px)] text-sweater-7 italic [--order:0] sm:px-12"
        >
          {scrambled}
        </p>
    }

    <section class="flex animate-fade-in flex-col items-center [--order:1]">
      <p>
        {
          hasUwu ?
            <Link href="https://twitter.com/sawaratsuki1004" target="_blank">
              {"Source."}
            </Link>
          : null
        }

        <span class="subtitle">Sorry, that's a 404. Page not found!</span>
      </p>
    </section>
  </main>
</CommonLayout>

<script>
  // For some reason, whitespace is added to the front and end of the word, so we can't
  // use scroll.textContent directly at first. Instead, store the scrambled word in the dataset
  const scroll = document.getElementById("scroll");

  // Scroll element is only visible if ?uwu=true mode is off
  if (scroll) {
    let text = scroll.dataset["scrambled"]!;

    // Remove it because now it's unnecessary
    delete scroll.dataset["scrambled"];

    setInterval(() => {
      scroll.textContent = text.slice(1) + text[0];
      text = scroll.textContent;
    }, 350);
  }
</script>
